.\"/* Copyright 1988,1990,1993,1996 by Paul Vixie
.\" * All rights reserved
.\" */
.\" 
.\"Copyright (c) 1997,2000 by Internet Software Consortium, Inc.
.\"
.\"Permission to use, copy, modify, and distribute this software for any
.\"purpose with or without fee is hereby granted, provided that the above
.\"copyright notice and this permission notice appear in all copies.
.\"
.\"THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM DISCLAIMS
.\"ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
.\"OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE
.\"CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\"DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\"PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
.\"ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
.\"SOFTWARE.
.\"
.\" $Id: cron.8,v 1.5 2003/02/15 20:52:17 vixie Exp $
.\" 
.TH CRON 8 "10 January 1996""
.UC 4
.SH NAME
cron \- daemon to execute scheduled commands (Vixie Cron)
.SH SYNOPSIS
cron [\-n]
.SH DESCRIPTION
.I Cron
should be started from /etc/rc or /etc/rc.local.  It will return immediately,
so you don't need to start it with '&'.  The \-n option changes this default
behavior causing it to run in the foreground.  This can be useful when 
starting it out of init.
.PP
.I Cron
searches /var/cron/tabs for crontab files which are named after accounts in
/etc/passwd; crontabs found are loaded into memory.
.I Cron
also searches for /etc/crontab which is in a different format (see
.IR crontab (5) ).
.I Cron
then wakes up every minute, examining all stored crontabs, checking each
command to see if it should be run in the current minute.  When executing
commands, any output is mailed to the owner of the crontab (or to the user
named in the MAILTO environment variable in the crontab, if such exists).
.PP
Additionally,
.I cron
checks each minute to see if its spool directory's modtime (or the modtime
on
.IR /etc/crontab )
has changed, and if it has,
.I cron
will then examine the modtime on all crontabs and reload those which have
changed.  Thus
.I cron
need not be restarted whenever a crontab file is modified.  Note that the
.IR Crontab (1)
command updates the modtime of the spool directory whenever it changes a
crontab.
.SH SIGNALS
On receipt of a \s-2SIGHUP\s+2, the cron daemon will close and reopen its
log file.  This is useful in scripts which rotate and age log files.  
Naturally this is not relevant if cron was built to use
.IR syslog (3).
.SH BUGS
.I cron
will behave mysteriously if a system clock is reset backward by more than
59 seconds.  Smaller steps, or steps forward, are handled correctly.
.SH "SEE ALSO"
.IR crontab (1),
.IR crontab (5)
.SH AUTHOR
.nf
Paul Vixie <vixie@isc.org>
